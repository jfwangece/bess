#
# The traffic generator that replays a PCAP packet trace.
#
import scapy.all as scapy

num_cores = 3
pcie0 = $BESS_DEV!"81:00.0"
offset0 = 0
ips = ['10.10.1.{}'.format(x) for x in [2,3,4,5]]
macs = ['b8:ce:f6:cc:96:e4', 'b8:ce:f6:d2:3a:c2', 'b8:ce:f6:d2:3b:12', 'b8:ce:f6:cc:8b:fc']
workers=[{'ip': ips[i], 'mac': macs[i]} for i in range(len(ips))]

PCAPFILE = $PCAP!"/local/bess/experiment_conf/20190117-130000.tcp.pcap"
pcap_file = '{}'.format(PCAPFILE)
playback_speed_conf = $PCAPCONF!"/local/bess/experiment_conf/pcap_dynamics_0.conf"
playback_rate_mpps = float($BESS_PKT_RATE!"0.0")
playback_rate_mbps = float($BESS_BIT_RATE!"0.0")
playback_speed = float($BESS_SPEED!"1")
tag_offset = 72
burst_size=int($BESS_BURST!'32')
ncore=int($BESS_NCORE!'4')

pcap_port = {}
src = {}
queue = {}
re = {}
ig = {}
qout = {}

pmd_port0::PMDPort(pci=pcie0, num_inc_q=1, num_out_q=num_cores)
pinc0::PortInc(port=pmd_port0)

for i in range(num_cores):
    pcap_port[i] = PCAPReader(dev='{}'.format(pcap_file), offset=tag_offset, timestamp=True)
    src[i] = PortInc(port=pcap_port)
    queue[i] = Queue(size=pow(2,24))
    re[i] = Replayer(offset=tag_offset, dynamic_traffic_conf=playback_speed_conf)
    qout[i] = QueueOut(port=pmd_port0, qid=i)
    ig[i] = IronsideIngress(endpoints=workers, ncore_thresh=ncore)
    src[i] -> queue[i] -> re[i] -> ig[i] -> Timestamp(offset=tag_offset) -> pout0

pinc0 -> Measure(offset=tag_offset) -> Sink()

pinc0.set_burst(burst=burst_size)
for i in range(num_cores):
    queue[i].set_burst(burst=burst_size)

bess.add_worker(wid=1, core=1)
pinc0.attach_task(wid=1)

for i in range(num_cores):
    bess.add_worker(wid=2+2*i, core=2+2*i)
    bess.add_worker(wid=2+2*i+1, core=2+2*i+1)
    bess.add_tc('rl',
                policy='rate_limit',
                resource='packet',
                limit={'packet': 100000000},
                wid=2+2*i+1)
    src[i].attach_task(wid=2+2*i)
    queue[i].attach_task(parent='rl')

bess.resume_all()
