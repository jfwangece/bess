#
# Test dummy chain:
# This is to estimate the packet loss rate
#

wid = int($BESS_WID!"0")
node_type = $BESS_NODE_TYPE!"c6525"

if node_type == "r6525":
    pcie0 = "81:00.0"
elif node_type == "c6525":
    pcie0 = "41:00.0"
else:
    raise Exception("node type is not supported")

# the traffic generator's routing information
traffic_ip = "10.10.1.1"
traffic_mac = $TRAFFIC_MAC!"b8:ce:f6:d2:3b:1a"

# NFVCtrl runs on its own core
core_cnt = 20
total_core_cnt = core_cnt
cores = [i for i in range(core_cnt)]
print("total cores: %d" %(total_core_cnt))
print("{} normal cores: {}".format(len(cores), cores))

# Module
port0::PMDPort(pci=pcie0, num_inc_q=core_cnt, num_out_q=core_cnt)
pinc0 = {}
pout0 = {}

# Pipeline
for i in cores:
    pinc0[i] = QueueInc(port=port0, qid=i)
    pout0[i] = QueueOut(port=port0, qid=i)
    pinc0[i] -> IPRewrite(dst_eth=traffic_mac, dst_ip=traffic_ip) -> pout0[i]

# Burst
for i in cores:
    pinc0[i].set_burst(burst=32)

## Core Assignment
# Do not use core 0

if node_type == "r6525":
    socket0_cores = [i for i in range(1, 32, 1)]
    socket1_cores = [i for i in range(32, 64, 1)]
    socket_cores = socket1_cores

    for i in cores:
        bess.add_worker(wid=i, core=socket_cores[i])
        pinc0[i].attach_task(wid=i)

if node_type == "c6525":
    socket0_cores = [i for i in range(1, 24, 1)]
    socket_cores = socket0_cores

    for i in cores:
        bess.add_worker(wid=i, core=socket_cores[i])
        pinc0[i].attach_task(wid=i)

bess.resume_all()
